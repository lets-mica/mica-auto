plugins {
    id 'java-library'
    id 'org.jetbrains.kotlin.jvm' version '1.9.24' apply false
}
apply from: "${rootProject.projectDir}/gradle/publish-maven.gradle"

ext {
    javaVersion = JavaVersion.VERSION_1_8
    springBootVersion = "2.7.18"
    lombokVersion = "1.18.32"
    googleAutoVersion = "1.1.1"
    compileTestingVersion = '0.21.0'
    inCapVersion = "1.0.0"
    kotlinVersion = "1.9.24"
}

group = GROUPID
version = VERSION

projects {
    apply plugin: 'java'
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
}

tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

dependencies {
    api "org.springframework.boot:spring-boot-configuration-processor:$springBootVersion"
    api "org.springframework.boot:spring-boot-autoconfigure-processor:$springBootVersion"
    implementation("com.google.devtools.ksp:symbol-processing-api:1.9.24-1.0.20")
    compileOnly "org.projectlombok:lombok:$lombokVersion"
    annotationProcessor "org.projectlombok:lombok:$lombokVersion"
    compileOnly "com.google.auto.service:auto-service:$googleAutoVersion"
    annotationProcessor "com.google.auto.service:auto-service:$googleAutoVersion"
    compileOnly "net.ltgt.gradle.incap:incap:$inCapVersion"
    annotationProcessor "net.ltgt.gradle.incap:incap-processor:$inCapVersion"
    testImplementation "com.google.testing.compile:compile-testing:$compileTestingVersion"
    testImplementation "net.ltgt.gradle.incap:incap:$inCapVersion"
    testImplementation 'dev.zacsweers.kctfork:ksp:0.4.1'
    testImplementation "org.jetbrains.kotlin:kotlin-compiler-embeddable:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-scripting-compiler:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-scripting-compiler-impl:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-scripting-common:$kotlinVersion"
    testImplementation "org.jetbrains.kotlin:kotlin-scripting-jvm:$kotlinVersion"
}

repositories {
    mavenLocal()
    maven { url "https://maven.aliyun.com/repository/public" }
    maven { url "https://maven.aliyun.com/repository/spring" }
    maven { url "https://maven.aliyun.com/repository/spring-plugin" }
    maven { url "https://repo.spring.io/libs-release" }
    maven { url "https://repo.spring.io/milestone" }
    mavenCentral()
}
